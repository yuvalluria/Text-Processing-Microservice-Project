# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: text_processor.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

_sym_db = _symbol_database.Default()

DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x14text_processor.proto\x12\x0etext_processor"$\n\x12ProcessTextRequest\x12\x0e\n\x04text\x18\x01 \x01(\t"\x87\x01\n\x13ProcessTextResponse\x12\x0f\n\x07summary\x18\x01 \x01(\t\x12\x11\n\tsentiment\x18\x02 \x01(\t\x12\x10\n\x08keywords\x18\x03 \x03(\t\x12\x17\n\x0foriginal_length\x18\x04 \x01(\x05\x12!\n\x10processed_length\x18\x05 \x01(\x05\x32\x65\n\rTextProcessor\x12T\n\x0bProcessText\x12".text_processor.ProcessTextRequest\x1a#.text_processor.ProcessTextResponseb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'text_processor_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  DESCRIPTOR._options = None

class ProcessTextRequest(_message.Message):
    DESCRIPTOR = _descriptor.MethodDescriptor(
        name='ProcessTextRequest',
        full_name='text_processor.ProcessTextRequest',
        index=0,
        containing_service=None,
        input_type=None,
        output_type=None,
    )
    
    def __init__(self, text=''):
        self.text = text

class ProcessTextResponse(_message.Message):
    DESCRIPTOR = _descriptor.MethodDescriptor(
        name='ProcessTextResponse', 
        full_name='text_processor.ProcessTextResponse',
        index=0,
        containing_service=None,
        input_type=None,
        output_type=None,
    )
    
    def __init__(self, summary='', sentiment='', keywords=None, original_length=0, processed_length=0):
        self.summary = summary
        self.sentiment = sentiment 
        self.keywords = keywords or []
        self.original_length = original_length
        self.processed_length = processed_length